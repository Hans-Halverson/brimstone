{
  type: "Program",
  loc: "1:0-8:9",
  body: [
    {
      type: "ExpressionStatement",
      loc: "1:0-1:4",
      kind: {
        type: "Literal",
        loc: "1:0-1:3",
        raw: "/a/",
        value: {
          pattern: "a",
          flags: "",
        },
        regexp: {
          type: "RegExp",
          alternatives: [
            {
              type: "Alternative",
              terms: [
                {
                  type: "Literal",
                  value: "a",
                },
              ],
            },
          ],
        },
      },
    },
    {
      type: "ExpressionStatement",
      loc: "2:0-2:6",
      kind: {
        type: "Literal",
        loc: "2:0-2:5",
        raw: "/a/sm",
        value: {
          pattern: "a",
          flags: "sm",
        },
        regexp: {
          type: "RegExp",
          alternatives: [
            {
              type: "Alternative",
              terms: [
                {
                  type: "Literal",
                  value: "a",
                },
              ],
            },
          ],
        },
      },
    },
    {
      type: "ExpressionStatement",
      loc: "4:0-4:13",
      kind: {
        type: "Literal",
        loc: "4:0-4:12",
        raw: "/[asdf]asdf/",
        value: {
          pattern: "[asdf]asdf",
          flags: "",
        },
        regexp: {
          type: "RegExp",
          alternatives: [
            {
              type: "Alternative",
              terms: [
                {
                  type: "CharacterClass",
                  is_inverted: false,
                  ranges: [
                    "Single(a)",
                    "Single(s)",
                    "Single(d)",
                    "Single(f)",
                  ],
                },
                {
                  type: "Literal",
                  value: "asdf",
                },
              ],
            },
          ],
        },
      },
    },
    {
      type: "ExpressionStatement",
      loc: "5:0-5:14",
      kind: {
        type: "Literal",
        loc: "5:0-5:13",
        raw: "/[asdf\[f\]]/",
        value: {
          pattern: "[asdf\[f\]]",
          flags: "",
        },
        regexp: {
          type: "RegExp",
          alternatives: [
            {
              type: "Alternative",
              terms: [
                {
                  type: "CharacterClass",
                  is_inverted: false,
                  ranges: [
                    "Single(a)",
                    "Single(s)",
                    "Single(d)",
                    "Single(f)",
                    "Single([)",
                    "Single(f)",
                    "Single(])",
                  ],
                },
              ],
            },
          ],
        },
      },
    },
    {
      type: "ExpressionStatement",
      loc: "7:0-7:5",
      kind: {
        type: "Literal",
        loc: "7:0-7:4",
        raw: "/\//",
        value: {
          pattern: "\/",
          flags: "",
        },
        regexp: {
          type: "RegExp",
          alternatives: [
            {
              type: "Alternative",
              terms: [
                {
                  type: "Literal",
                  value: "\/",
                },
              ],
            },
          ],
        },
      },
    },
    {
      type: "ExpressionStatement",
      loc: "8:0-8:9",
      kind: {
        type: "Literal",
        loc: "8:0-8:8",
        raw: "/\a\b\c/",
        value: {
          pattern: "\a\b\c",
          flags: "",
        },
        regexp: {
          type: "RegExp",
          alternatives: [
            {
              type: "Alternative",
              terms: [
                {
                  type: "Literal",
                  value: "\a\b\c",
                },
              ],
            },
          ],
        },
      },
    },
  ],
  sourceType: "script",
  has_use_strict_directive: false,
}