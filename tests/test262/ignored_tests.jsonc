{
  // Tests which are always ignored
  "always": {
    "tests": [
      // ECMA-402 Internationalization API is not implemented
      "intl402/*",
      // Incorrect tests due to changed base/property evaluation order
      // https://github.com/tc39/test262/issues/3407
      "language/expressions/assignment/target-member-computed-reference-null.js",
      "language/expressions/assignment/target-member-computed-reference-undefined.js",
      "language/expressions/compound-assignment/S11.13.2_A7.10_T1.js",
      "language/expressions/compound-assignment/S11.13.2_A7.10_T2.js",
      "language/expressions/compound-assignment/S11.13.2_A7.11_T1.js",
      "language/expressions/compound-assignment/S11.13.2_A7.11_T2.js",
      "language/expressions/compound-assignment/S11.13.2_A7.1_T1.js",
      "language/expressions/compound-assignment/S11.13.2_A7.1_T2.js",
      "language/expressions/compound-assignment/S11.13.2_A7.2_T1.js",
      "language/expressions/compound-assignment/S11.13.2_A7.2_T2.js",
      "language/expressions/compound-assignment/S11.13.2_A7.3_T1.js",
      "language/expressions/compound-assignment/S11.13.2_A7.3_T2.js",
      "language/expressions/compound-assignment/S11.13.2_A7.4_T1.js",
      "language/expressions/compound-assignment/S11.13.2_A7.4_T2.js",
      "language/expressions/compound-assignment/S11.13.2_A7.5_T1.js",
      "language/expressions/compound-assignment/S11.13.2_A7.5_T2.js",
      "language/expressions/compound-assignment/S11.13.2_A7.6_T1.js",
      "language/expressions/compound-assignment/S11.13.2_A7.6_T2.js",
      "language/expressions/compound-assignment/S11.13.2_A7.7_T1.js",
      "language/expressions/compound-assignment/S11.13.2_A7.7_T2.js",
      "language/expressions/compound-assignment/S11.13.2_A7.8_T1.js",
      "language/expressions/compound-assignment/S11.13.2_A7.8_T2.js",
      "language/expressions/compound-assignment/S11.13.2_A7.9_T1.js",
      "language/expressions/compound-assignment/S11.13.2_A7.9_T2.js",
      "language/expressions/logical-assignment/lgcl-and-assignment-operator-lhs-before-rhs.js",
      "language/expressions/logical-assignment/lgcl-nullish-assignment-operator-lhs-before-rhs.js",
      "language/expressions/logical-assignment/lgcl-or-assignment-operator-lhs-before-rhs.js",
      "language/expressions/postfix-decrement/S11.3.2_A6_T1.js",
      "language/expressions/postfix-decrement/S11.3.2_A6_T2.js",
      "language/expressions/postfix-increment/S11.3.1_A6_T1.js",
      "language/expressions/postfix-increment/S11.3.1_A6_T2.js",
      "language/expressions/prefix-decrement/S11.4.5_A6_T1.js",
      "language/expressions/prefix-decrement/S11.4.5_A6_T2.js",
      "language/expressions/prefix-increment/S11.4.4_A6_T1.js",
      "language/expressions/prefix-increment/S11.4.4_A6_T2.js"
    ],
    "features": [
      // Always skip tail-call-optimization tests as they cause stack overflow
      "tail-call-optimization",
      // Non-standard extension
      "caller",
      // Stage < 4 proposals
      "array-grouping",
      "arraybuffer-transfer",
      "decorators",
      "import-assertions",
      "iterator-helpers",
      "json-modules",
      "json-parse-with-source",
      "legacy-regexp",
      "regexp-duplicate-named-groups",
      "resizable-arraybuffer",
      "FinalizationRegistry.prototype.cleanupSome",
      "Intl.DurationFormat",
      "Intl.Locale-info",
      "Intl.NumberFormat-v3",
      "Temporal",
      "ShadowRealm"
    ]
  },
  // Slow tests which are ignored in normal runs but can be run with the --all flag
  "slow": {
    "tests": [
      // Passing but ignored
      "built-ins/parseFloat/S15.1.2.3_A6.js",
      "built-ins/parseInt/S15.1.2.2_A8.js",
      "language/comments/S7.4_A5.js",
      "language/comments/S7.4_A6.js",
      // All passing except for built-ins/RegExp/property-escapes/generated/strings/*
      "built-ins/RegExp/property-escapes/generated/*.js",
      // Some failing
      "built-ins/RegExp/CharacterClassEscapes/*.js",
      // Not yet passing
      "built-ins/decodeURI/*.js",
      "built-ins/decodeURIComponent/*.js",
      // Slow array tests - all passing but could be improved by special casing sparse Array objects
      "built-ins/Array/prototype/every/15.4.4.16-7-c-ii-2.js",
      "built-ins/Array/prototype/filter/15.4.4.20-9-c-ii-1.js",
      "built-ins/Array/prototype/forEach/15.4.4.18-7-c-ii-1.js",
      "built-ins/Array/prototype/indexOf/15.4.4.14-10-1.js",
      "built-ins/Array/prototype/lastIndexOf/15.4.4.15-9-1.js",
      "built-ins/Array/prototype/map/15.4.4.19-8-c-ii-1.js",
      "built-ins/Array/prototype/some/15.4.4.17-7-c-ii-2.js",
      "built-ins/TypedArray/prototype/copyWithin/coerced-values-end-detached.js",
      "built-ins/TypedArray/prototype/copyWithin/coerced-values-end-detached-prototype.js",
      "built-ins/TypedArray/prototype/copyWithin/coerced-values-start-detached.js"
    ]
  }
}