[BytecodeFunction: <global>] {
  Parameters: 0, Registers: 1
     0: 16 ff 00   NewClosure r0, c0
     3: 0a ff 01   StoreGlobal r0, c1
     6: 16 ff 02   NewClosure r0, c2
     9: 0a ff 03   StoreGlobal r0, c3
    12: 16 ff 04   NewClosure r0, c4
    15: 0a ff 05   StoreGlobal r0, c5
    18: 16 ff 06   NewClosure r0, c6
    21: 0a ff 07   StoreGlobal r0, c7
    24: 16 ff 08   NewClosure r0, c8
    27: 0a ff 09   StoreGlobal r0, c9
    30: 16 ff 0a   NewClosure r0, c10
    33: 0a ff 0b   StoreGlobal r0, c11
    36: 05 ff      LoadUndefined r0
    38: 0c ff      Ret r0
  Constant Table:
    0: [BytecodeFunction: testIfNoAlternate]
    1: [String: testIfNoAlternate]
    2: [BytecodeFunction: TestIfNormalAlternate]
    3: [String: TestIfNormalAlternate]
    4: [BytecodeFunction: testIfNormalConseq]
    5: [String: testIfNormalConseq]
    6: [BytecodeFunction: testIfBothAbrupt]
    7: [String: testIfBothAbrupt]
    8: [BytecodeFunction: testIfNestedOneNormalBranch]
    9: [String: testIfNestedOneNormalBranch]
    10: [BytecodeFunction: testIfNestedNoNormalBranches]
    11: [String: testIfNestedNoNormalBranches]
}

[BytecodeFunction: testIfNoAlternate] {
  Parameters: 0, Registers: 1
     0: 07 ff      LoadTrue r0
     2: 12 ff 08   JumpFalse r0, 8 (.L0)
     5: 03 ff 01   LoadImmediate r0, 1
     8: 0c ff      Ret r0
  .L0:
    10: 05 ff      LoadUndefined r0
    12: 0c ff      Ret r0
}

[BytecodeFunction: TestIfNormalAlternate] {
  Parameters: 0, Registers: 1
     0: 07 ff      LoadTrue r0
     2: 12 ff 08   JumpFalse r0, 8 (.L0)
     5: 03 ff 01   LoadImmediate r0, 1
     8: 0c ff      Ret r0
  .L0:
    10: 03 ff 02   LoadImmediate r0, 2
    13: 05 ff      LoadUndefined r0
    15: 0c ff      Ret r0
}

[BytecodeFunction: testIfNormalConseq] {
  Parameters: 0, Registers: 1
     0: 07 ff      LoadTrue r0
     2: 12 ff 08   JumpFalse r0, 8 (.L0)
     5: 03 ff 01   LoadImmediate r0, 1
     8: 10 07      Jump 7 (.L1)
  .L0:
    10: 03 ff 02   LoadImmediate r0, 2
    13: 0c ff      Ret r0
  .L1:
    15: 05 ff      LoadUndefined r0
    17: 0c ff      Ret r0
}

[BytecodeFunction: testIfBothAbrupt] {
  Parameters: 0, Registers: 1
     0: 07 ff      LoadTrue r0
     2: 12 ff 08   JumpFalse r0, 8 (.L0)
     5: 03 ff 01   LoadImmediate r0, 1
     8: 0c ff      Ret r0
  .L0:
    10: 03 ff 02   LoadImmediate r0, 2
    13: 0c ff      Ret r0
}

[BytecodeFunction: testIfNestedOneNormalBranch] {
  Parameters: 0, Registers: 1
     0: 07 ff      LoadTrue r0
     2: 12 ff 1c   JumpFalse r0, 28 (.L2)
     5: 07 ff      LoadTrue r0
     7: 12 ff 08   JumpFalse r0, 8 (.L0)
    10: 03 ff 01   LoadImmediate r0, 1
    13: 0c ff      Ret r0
  .L0:
    15: 07 ff      LoadTrue r0
    17: 12 ff 08   JumpFalse r0, 8 (.L1)
    20: 03 ff 02   LoadImmediate r0, 2
    23: 0c ff      Ret r0
  .L1:
    25: 03 ff 03   LoadImmediate r0, 3
    28: 10 07      Jump 7 (.L3)
  .L2:
    30: 03 ff 04   LoadImmediate r0, 4
    33: 0c ff      Ret r0
  .L3:
    35: 05 ff      LoadUndefined r0
    37: 0c ff      Ret r0
}

[BytecodeFunction: testIfNestedNoNormalBranches] {
  Parameters: 0, Registers: 1
     0: 07 ff      LoadTrue r0
     2: 12 ff 1c   JumpFalse r0, 28 (.L2)
     5: 07 ff      LoadTrue r0
     7: 12 ff 08   JumpFalse r0, 8 (.L0)
    10: 03 ff 01   LoadImmediate r0, 1
    13: 0c ff      Ret r0
  .L0:
    15: 07 ff      LoadTrue r0
    17: 12 ff 08   JumpFalse r0, 8 (.L1)
    20: 03 ff 02   LoadImmediate r0, 2
    23: 0c ff      Ret r0
  .L1:
    25: 03 ff 03   LoadImmediate r0, 3
    28: 0c ff      Ret r0
  .L2:
    30: 03 ff 04   LoadImmediate r0, 4
    33: 0c ff      Ret r0
}
