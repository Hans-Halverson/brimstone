{
  type: "Program",
  loc: "1:0-7:11",
  body: [
    {
      type: "ExpressionStatement",
      loc: "1:0-1:48",
      kind: {
        type: "LogicalExpression",
        loc: "1:0-1:47",
        operator: "&&",
        left: {
          type: "Identifier",
          loc: "1:0-1:1",
          name: "a",
        },
        right: {
          type: "BinaryExpression",
          loc: "1:5-1:47",
          operator: "|",
          left: {
            type: "Identifier",
            loc: "1:5-1:6",
            name: "b",
          },
          right: {
            type: "BinaryExpression",
            loc: "1:9-1:47",
            operator: "^",
            left: {
              type: "Identifier",
              loc: "1:9-1:10",
              name: "c",
            },
            right: {
              type: "BinaryExpression",
              loc: "1:13-1:47",
              operator: "&",
              left: {
                type: "Identifier",
                loc: "1:13-1:14",
                name: "d",
              },
              right: {
                type: "BinaryExpression",
                loc: "1:17-1:47",
                operator: "==",
                left: {
                  type: "Identifier",
                  loc: "1:17-1:18",
                  name: "e",
                },
                right: {
                  type: "BinaryExpression",
                  loc: "1:22-1:47",
                  operator: "<",
                  left: {
                    type: "Identifier",
                    loc: "1:22-1:23",
                    name: "f",
                  },
                  right: {
                    type: "BinaryExpression",
                    loc: "1:26-1:47",
                    operator: ">>",
                    left: {
                      type: "Identifier",
                      loc: "1:26-1:27",
                      name: "g",
                    },
                    right: {
                      type: "BinaryExpression",
                      loc: "1:31-1:47",
                      operator: "+",
                      left: {
                        type: "Identifier",
                        loc: "1:31-1:32",
                        name: "h",
                      },
                      right: {
                        type: "BinaryExpression",
                        loc: "1:35-1:47",
                        operator: "*",
                        left: {
                          type: "Identifier",
                          loc: "1:35-1:36",
                          name: "i",
                        },
                        right: {
                          type: "BinaryExpression",
                          loc: "1:39-1:47",
                          operator: "**",
                          left: {
                            type: "Identifier",
                            loc: "1:39-1:40",
                            name: "j",
                          },
                          right: {
                            type: "UpdateExpression",
                            loc: "1:44-1:47",
                            operator: "++",
                            argument: {
                              type: "Identifier",
                              loc: "1:44-1:45",
                              name: "k",
                            },
                            prefix: false,
                          },
                        },
                      },
                    },
                  },
                },
              },
            },
          },
        },
      },
    },
    {
      type: "ExpressionStatement",
      loc: "3:0-3:48",
      kind: {
        type: "LogicalExpression",
        loc: "3:0-3:47",
        operator: "&&",
        left: {
          type: "BinaryExpression",
          loc: "3:0-3:42",
          operator: "|",
          left: {
            type: "BinaryExpression",
            loc: "3:0-3:38",
            operator: "^",
            left: {
              type: "BinaryExpression",
              loc: "3:0-3:34",
              operator: "&",
              left: {
                type: "BinaryExpression",
                loc: "3:0-3:30",
                operator: "==",
                left: {
                  type: "BinaryExpression",
                  loc: "3:0-3:25",
                  operator: "<",
                  left: {
                    type: "BinaryExpression",
                    loc: "3:0-3:21",
                    operator: ">>",
                    left: {
                      type: "BinaryExpression",
                      loc: "3:0-3:16",
                      operator: "+",
                      left: {
                        type: "BinaryExpression",
                        loc: "3:0-3:12",
                        operator: "*",
                        left: {
                          type: "BinaryExpression",
                          loc: "3:0-3:8",
                          operator: "**",
                          left: {
                            type: "UpdateExpression",
                            loc: "3:0-3:3",
                            operator: "++",
                            argument: {
                              type: "Identifier",
                              loc: "3:2-3:3",
                              name: "a",
                            },
                            prefix: true,
                          },
                          right: {
                            type: "Identifier",
                            loc: "3:7-3:8",
                            name: "b",
                          },
                        },
                        right: {
                          type: "Identifier",
                          loc: "3:11-3:12",
                          name: "c",
                        },
                      },
                      right: {
                        type: "Identifier",
                        loc: "3:15-3:16",
                        name: "d",
                      },
                    },
                    right: {
                      type: "Identifier",
                      loc: "3:20-3:21",
                      name: "e",
                    },
                  },
                  right: {
                    type: "Identifier",
                    loc: "3:24-3:25",
                    name: "f",
                  },
                },
                right: {
                  type: "Identifier",
                  loc: "3:29-3:30",
                  name: "g",
                },
              },
              right: {
                type: "Identifier",
                loc: "3:33-3:34",
                name: "h",
              },
            },
            right: {
              type: "Identifier",
              loc: "3:37-3:38",
              name: "i",
            },
          },
          right: {
            type: "Identifier",
            loc: "3:41-3:42",
            name: "j",
          },
        },
        right: {
          type: "Identifier",
          loc: "3:46-3:47",
          name: "k",
        },
      },
    },
    {
      type: "ExpressionStatement",
      loc: "5:0-5:5",
      kind: {
        type: "UnaryExpression",
        loc: "5:0-5:4",
        operator: "+",
        argument: {
          type: "UpdateExpression",
          loc: "5:1-5:4",
          operator: "++",
          argument: {
            type: "Identifier",
            loc: "5:1-5:2",
            name: "a",
          },
          prefix: false,
        },
      },
    },
    {
      type: "ExpressionStatement",
      loc: "7:0-7:11",
      kind: {
        type: "AssignmentExpression",
        loc: "7:0-7:10",
        operator: "=",
        left: {
          type: "Identifier",
          loc: "7:0-7:1",
          name: "a",
        },
        right: {
          type: "LogicalExpression",
          loc: "7:4-7:10",
          operator: "&&",
          left: {
            type: "Identifier",
            loc: "7:4-7:5",
            name: "b",
          },
          right: {
            type: "Identifier",
            loc: "7:9-7:10",
            name: "c",
          },
        },
      },
    },
  ],
}