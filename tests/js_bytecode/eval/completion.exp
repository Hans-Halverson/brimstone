[BytecodeFunction: <global>] {
  Parameters: 0, Registers: 3
      0: Mov r0, <scope>
      3: LoadGlobal r1, c0
      6: LoadConstant r2, c1
      9: CallMaybeEval r1, r1, r2, 1, 0
     15: Jump 5 (.L0)
     17: Mov <scope>, r0
  .L0:
     20: LoadGlobal r0, c0
     23: LoadConstant r1, c2
     26: CallMaybeEval r0, r0, r1, 1, 0
     32: LoadGlobal r0, c0
     35: LoadConstant r1, c3
     38: CallMaybeEval r0, r0, r1, 1, 0
     44: LoadGlobal r0, c0
     47: LoadConstant r1, c4
     50: CallMaybeEval r0, r0, r1, 1, 0
     56: LoadGlobal r0, c0
     59: LoadConstant r1, c5
     62: CallMaybeEval r0, r0, r1, 1, 0
     68: LoadGlobal r0, c0
     71: LoadConstant r1, c6
     74: CallMaybeEval r0, r0, r1, 1, 0
     80: LoadGlobal r0, c0
     83: LoadConstant r1, c7
     86: CallMaybeEval r0, r0, r1, 1, 0
     92: LoadGlobal r0, c0
     95: LoadConstant r1, c8
     98: CallMaybeEval r0, r0, r1, 1, 0
    104: LoadGlobal r0, c0
    107: LoadConstant r1, c9
    110: CallMaybeEval r0, r0, r1, 1, 0
    116: LoadGlobal r0, c0
    119: LoadConstant r1, c10
    122: CallMaybeEval r0, r0, r1, 1, 0
    128: LoadGlobal r0, c0
    131: LoadConstant r1, c11
    134: CallMaybeEval r0, r0, r1, 1, 0
    140: LoadGlobal r0, c0
    143: LoadConstant r1, c12
    146: CallMaybeEval r0, r0, r1, 1, 0
    152: LoadGlobal r0, c0
    155: LoadConstant r1, c13
    158: CallMaybeEval r0, r0, r1, 1, 0
    164: LoadUndefined r0
    166: Ret r0
  Constant Table:
    0: [String: eval]
    1: [String: 
  "expression statement completions";
  1 + 2;
  a + b;
  "foo";
]
    2: [String: 
  "inner completions";
  var a = 1;
  if (a) {
    1;
  } else {
    2;
  }
]
    3: [String: 
  "if completion";
  if (true) {
    1
  }
]
    4: [String: 
  "switch completion";
  switch (true) {}
]
    5: [String: 
  "while completion";
  while (false) { 1; }
]
    6: [String: 
  "do-while completion";
  do { 1; } while (false);
]
    7: [String: 
  "with completion";
  with ({}) { 1; }
]
    8: [String: 
  "for completion";
  for (; false; ) { 1; }
]
    9: [String: 
  "for-in completion";
  for (var x in {}) { 1; }
]
    10: [String: 
  "for-of completion";
  for (var x of []) { 1; }
]
    11: [String: 
  "try-catch completion";
  try { 1; } catch { 2; }
]
    12: [String: 
  "try-finally completion";
  try { 1; } finally { 2; }
]
    13: [String: 
  "try-catch-finally completion";
  try { 1; } catch { 2; } finally { 3; }
]
  Exception Handlers:
    3-15 -> 17
}

[BytecodeFunction: <eval>] {
  Parameters: 0, Registers: 3
     0: 04 ff 00      LoadConstant r0, c0
     3: 03 fe 01      LoadImmediate r1, 1
     6: 03 fd 02      LoadImmediate r2, 2
     9: 19 ff fe fd   Add r0, r1, r2
    13: 0d fe 01      LoadDynamic r1, c1
    16: 0d fd 02      LoadDynamic r2, c2
    19: 19 ff fe fd   Add r0, r1, r2
    23: 04 ff 03      LoadConstant r0, c3
    26: 18 ff         Ret r0
  Constant Table:
    0: [String: expression statement completions]
    1: [String: a]
    2: [String: b]
    3: [String: foo]
}

[BytecodeFunction: <eval>] {
  Parameters: 0, Registers: 2
     0: 04 ff 00   LoadConstant r0, c0
     3: 03 fe 01   LoadImmediate r1, 1
     6: 0f fe 01   StoreDynamic r1, c1
     9: 05 ff      LoadUndefined r0
    11: 0d fe 01   LoadDynamic r1, c1
    14: 42 fe 08   JumpToBooleanFalse r1, 8 (.L0)
    17: 03 ff 01   LoadImmediate r0, 1
    20: 3a 05      Jump 5 (.L1)
  .L0:
    22: 03 ff 02   LoadImmediate r0, 2
  .L1:
    25: 18 ff      Ret r0
  Constant Table:
    0: [String: inner completions]
    1: [String: a]
}

[BytecodeFunction: <eval>] {
  Parameters: 0, Registers: 2
     0: 04 ff 00   LoadConstant r0, c0
     3: 05 ff      LoadUndefined r0
     5: 08 fe      LoadTrue r1
     7: 40 fe 06   JumpFalse r1, 6 (.L0)
    10: 03 ff 01   LoadImmediate r0, 1
  .L0:
    13: 18 ff      Ret r0
  Constant Table:
    0: [String: if completion]
}

[BytecodeFunction: <eval>] {
  Parameters: 0, Registers: 2
    0: 04 ff 00   LoadConstant r0, c0
    3: 05 ff      LoadUndefined r0
    5: 08 fe      LoadTrue r1
    7: 3a 02      Jump 2 (.L0)
  .L0:
    9: 18 ff      Ret r0
  Constant Table:
    0: [String: switch completion]
}

[BytecodeFunction: <eval>] {
  Parameters: 0, Registers: 2
     0: 04 ff 00   LoadConstant r0, c0
     3: 05 ff      LoadUndefined r0
  .L0:
     5: 09 fe      LoadFalse r1
     7: 40 fe 08   JumpFalse r1, 8 (.L1)
    10: 03 ff 01   LoadImmediate r0, 1
    13: 3a f8      Jump -8 (.L0)
  .L1:
    15: 18 ff      Ret r0
  Constant Table:
    0: [String: while completion]
}

[BytecodeFunction: <eval>] {
  Parameters: 0, Registers: 2
     0: 04 ff 00   LoadConstant r0, c0
     3: 05 ff      LoadUndefined r0
  .L0:
     5: 03 ff 01   LoadImmediate r0, 1
     8: 09 fe      LoadFalse r1
    10: 3c fe fb   JumpTrue r1, -5 (.L0)
    13: 18 ff      Ret r0
  Constant Table:
    0: [String: do-while completion]
}

[BytecodeFunction: <eval>] {
  Parameters: 0, Registers: 2
     0: 66 00         PushLexicalScope c0
     2: 6c 07 00 00   StoreToScope <this>, 0, 0
     6: 04 ff 01      LoadConstant r0, c1
     9: 05 ff         LoadUndefined r0
    11: 4d fe         NewObject r1
    13: 68 fe 02      PushWithScope r1, c2
    16: 03 ff 01      LoadImmediate r0, 1
    19: 69            PopScope 
    20: 18 ff         Ret r0
  Constant Table:
    0: [ScopeNames]
    1: [String: with completion]
    2: [ScopeNames]
}

[BytecodeFunction: <eval>] {
  Parameters: 0, Registers: 2
     0: 04 ff 00   LoadConstant r0, c0
     3: 05 ff      LoadUndefined r0
  .L0:
     5: 09 fe      LoadFalse r1
     7: 40 fe 08   JumpFalse r1, 8 (.L1)
    10: 03 ff 01   LoadImmediate r0, 1
    13: 3a f8      Jump -8 (.L0)
  .L1:
    15: 18 ff      Ret r0
  Constant Table:
    0: [String: for completion]
}

[BytecodeFunction: <eval>] {
  Parameters: 0, Registers: 3
     0: 04 ff 00   LoadConstant r0, c0
     3: 05 ff      LoadUndefined r0
     5: 4d fe      NewObject r1
     7: 46 fe 14   JumpNullish r1, 20 (.L1)
    10: 75 fe fe   NewForInIterator r1, r1
  .L0:
    13: 76 fd fe   ForInNext r2, r1
    16: 46 fd 0b   JumpNullish r2, 11 (.L1)
    19: 0f fd 01   StoreDynamic r2, c1
    22: 03 ff 01   LoadImmediate r0, 1
    25: 3a f4      Jump -12 (.L0)
  .L1:
    27: 18 ff      Ret r0
  Constant Table:
    0: [String: for-in completion]
    1: [String: x]
}

[BytecodeFunction: <eval>] {
  Parameters: 0, Registers: 6
     0: 04 ff 00         LoadConstant r0, c0
     3: 05 ff            LoadUndefined r0
     5: 4e fc            NewArray r3
     7: 77 fe fd fc      GetIterator r1, r2, r3
  .L0:
    11: 78 fc fb fe fd   IteratorNext r3, r4, r1, r2
    16: 3c fb 1a         JumpTrue r4, 26 (.L2)
    19: 0f fc 01         StoreDynamic r3, c1
    22: 02 fa 03         Mov r5, <scope>
    25: 03 ff 01         LoadImmediate r0, 1
    28: 3a 0c            Jump 12 (.L1)
    30: 03 fc 00         LoadImmediate r3, 0
    33: 02 03 fa         Mov <scope>, r5
    36: 79 fe            IteratorClose r1
    38: 6d fb            Throw r4
  .L1:
    40: 3a e3            Jump -29 (.L0)
  .L2:
    42: 18 ff            Ret r0
  Constant Table:
    0: [String: for-of completion]
    1: [String: x]
  Exception Handlers:
    19-28 -> 30 (r4)
    36-38 -> 38
}

[BytecodeFunction: <eval>] {
  Parameters: 0, Registers: 2
     0: 04 ff 00   LoadConstant r0, c0
     3: 05 ff      LoadUndefined r0
     5: 02 fe 03   Mov r1, <scope>
     8: 03 ff 01   LoadImmediate r0, 1
    11: 3a 08      Jump 8 (.L0)
    13: 02 03 fe   Mov <scope>, r1
    16: 03 ff 02   LoadImmediate r0, 2
  .L0:
    19: 18 ff      Ret r0
  Constant Table:
    0: [String: try-catch completion]
  Exception Handlers:
    8-11 -> 13
}

[BytecodeFunction: <eval>] {
  Parameters: 0, Registers: 5
     0: 04 ff 00      LoadConstant r0, c0
     3: 02 fc 03      Mov r3, <scope>
     6: 05 ff         LoadUndefined r0
     8: 03 ff 01      LoadImmediate r0, 1
    11: 03 fe 01      LoadImmediate r1, 1
    14: 3a 05         Jump 5 (.L0)
    16: 03 fe 00      LoadImmediate r1, 0
  .L0:
    19: 02 03 fc      Mov <scope>, r3
    22: 02 fc ff      Mov r3, r0
    25: 05 ff         LoadUndefined r0
    27: 03 ff 02      LoadImmediate r0, 2
    30: 03 fb 00      LoadImmediate r4, 0
    33: 27 fb fe fb   StrictEqual r4, r1, r4
    37: 40 fb 05      JumpFalse r4, 5 (.L1)
    40: 6d fd         Throw r2
  .L1:
    42: 02 ff fc      Mov r0, r3
    45: 3a 02         Jump 2 (.L2)
  .L2:
    47: 18 ff         Ret r0
  Constant Table:
    0: [String: try-finally completion]
  Exception Handlers:
    8-11 -> 16 (r2)
}

[BytecodeFunction: <eval>] {
  Parameters: 0, Registers: 5
     0: 04 ff 00      LoadConstant r0, c0
     3: 02 fc 03      Mov r3, <scope>
     6: 05 ff         LoadUndefined r0
     8: 03 ff 01      LoadImmediate r0, 1
    11: 03 fe 01      LoadImmediate r1, 1
    14: 3a 10         Jump 16 (.L0)
    16: 02 03 fc      Mov <scope>, r3
    19: 03 ff 02      LoadImmediate r0, 2
    22: 03 fe 01      LoadImmediate r1, 1
    25: 3a 05         Jump 5 (.L0)
    27: 03 fe 00      LoadImmediate r1, 0
  .L0:
    30: 02 03 fc      Mov <scope>, r3
    33: 02 fc ff      Mov r3, r0
    36: 05 ff         LoadUndefined r0
    38: 03 ff 03      LoadImmediate r0, 3
    41: 03 fb 00      LoadImmediate r4, 0
    44: 27 fb fe fb   StrictEqual r4, r1, r4
    48: 40 fb 05      JumpFalse r4, 5 (.L1)
    51: 6d fd         Throw r2
  .L1:
    53: 02 ff fc      Mov r0, r3
    56: 3a 02         Jump 2 (.L2)
  .L2:
    58: 18 ff         Ret r0
  Constant Table:
    0: [String: try-catch-finally completion]
  Exception Handlers:
    8-11 -> 16
    16-22 -> 27 (r2)
}

