[BytecodeFunction: <global>] {
  Parameters: 0, Registers: 3
      0: Mov r0, <scope>
      3: LoadGlobal r1, c0
      6: LoadConstant r2, c1
      9: CallMaybeEval r1, r1, r2, 1
     14: Jump 5 (.L0)
     16: Mov <scope>, r0
  .L0:
     19: LoadGlobal r0, c0
     22: LoadConstant r1, c2
     25: CallMaybeEval r0, r0, r1, 1
     30: LoadGlobal r0, c0
     33: LoadConstant r1, c3
     36: CallMaybeEval r0, r0, r1, 1
     41: LoadGlobal r0, c0
     44: LoadConstant r1, c4
     47: CallMaybeEval r0, r0, r1, 1
     52: LoadGlobal r0, c0
     55: LoadConstant r1, c5
     58: CallMaybeEval r0, r0, r1, 1
     63: LoadGlobal r0, c0
     66: LoadConstant r1, c6
     69: CallMaybeEval r0, r0, r1, 1
     74: LoadGlobal r0, c0
     77: LoadConstant r1, c7
     80: CallMaybeEval r0, r0, r1, 1
     85: LoadGlobal r0, c0
     88: LoadConstant r1, c8
     91: CallMaybeEval r0, r0, r1, 1
     96: LoadGlobal r0, c0
     99: LoadConstant r1, c9
    102: CallMaybeEval r0, r0, r1, 1
    107: LoadGlobal r0, c0
    110: LoadConstant r1, c10
    113: CallMaybeEval r0, r0, r1, 1
    118: LoadGlobal r0, c0
    121: LoadConstant r1, c11
    124: CallMaybeEval r0, r0, r1, 1
    129: LoadGlobal r0, c0
    132: LoadConstant r1, c12
    135: CallMaybeEval r0, r0, r1, 1
    140: LoadGlobal r0, c0
    143: LoadConstant r1, c13
    146: CallMaybeEval r0, r0, r1, 1
    151: LoadUndefined r0
    153: Ret r0
  Constant Table:
    0: [String: eval]
    1: [String: 
  "expression statement completions";
  1 + 2;
  a + b;
  "foo";
]
    2: [String: 
  "inner completions";
  var a = 1;
  if (a) {
    1;
  } else {
    2;
  }
]
    3: [String: 
  "if completion";
  if (true) {
    1
  }
]
    4: [String: 
  "switch completion";
  switch (true) {}
]
    5: [String: 
  "while completion";
  while (false) { 1; }
]
    6: [String: 
  "do-while completion";
  do { 1; } while (false);
]
    7: [String: 
  "with completion";
  with ({}) { 1; }
]
    8: [String: 
  "for completion";
  for (; false; ) { 1; }
]
    9: [String: 
  "for-in completion";
  for (var x in {}) { 1; }
]
    10: [String: 
  "for-of completion";
  for (var x of []) { 1; }
]
    11: [String: 
  "try-catch completion";
  try { 1; } catch { 2; }
]
    12: [String: 
  "try-finally completion";
  try { 1; } finally { 2; }
]
    13: [String: 
  "try-catch-finally completion";
  try { 1; } catch { 2; } finally { 3; }
]
  Exception Handlers:
    3-14 -> 16
}

[BytecodeFunction: <eval>] {
  Parameters: 0, Registers: 3
     0: 67 00         EvalInit c0
     2: 04 ff 01      LoadConstant r0, c1
     5: 03 fe 01      LoadImmediate r1, 1
     8: 03 fd 02      LoadImmediate r2, 2
    11: 18 ff fe fd   Add r0, r1, r2
    15: 0d fe 02      LoadDynamic r1, c2
    18: 0d fd 03      LoadDynamic r2, c3
    21: 18 ff fe fd   Add r0, r1, r2
    25: 04 ff 04      LoadConstant r0, c4
    28: 17 ff         Ret r0
  Constant Table:
    0: [GlobalNames]
    1: [String: expression statement completions]
    2: [String: a]
    3: [String: b]
    4: [String: foo]
}

[BytecodeFunction: <eval>] {
  Parameters: 0, Registers: 2
     0: 67 00      EvalInit c0
     2: 04 ff 01   LoadConstant r0, c1
     5: 03 fe 01   LoadImmediate r1, 1
     8: 0f fe 02   StoreDynamic r1, c2
    11: 05 ff      LoadUndefined r0
    13: 0d fe 02   LoadDynamic r1, c2
    16: 41 fe 08   JumpToBooleanFalse r1, 8 (.L0)
    19: 03 ff 01   LoadImmediate r0, 1
    22: 39 05      Jump 5 (.L1)
  .L0:
    24: 03 ff 02   LoadImmediate r0, 2
  .L1:
    27: 17 ff      Ret r0
  Constant Table:
    0: [GlobalNames]
    1: [String: inner completions]
    2: [String: a]
}

[BytecodeFunction: <eval>] {
  Parameters: 0, Registers: 2
     0: 67 00      EvalInit c0
     2: 04 ff 01   LoadConstant r0, c1
     5: 05 ff      LoadUndefined r0
     7: 08 fe      LoadTrue r1
     9: 3f fe 06   JumpFalse r1, 6 (.L0)
    12: 03 ff 01   LoadImmediate r0, 1
  .L0:
    15: 17 ff      Ret r0
  Constant Table:
    0: [GlobalNames]
    1: [String: if completion]
}

[BytecodeFunction: <eval>] {
  Parameters: 0, Registers: 2
     0: 67 00      EvalInit c0
     2: 04 ff 01   LoadConstant r0, c1
     5: 05 ff      LoadUndefined r0
     7: 08 fe      LoadTrue r1
     9: 39 02      Jump 2 (.L0)
  .L0:
    11: 17 ff      Ret r0
  Constant Table:
    0: [GlobalNames]
    1: [String: switch completion]
}

[BytecodeFunction: <eval>] {
  Parameters: 0, Registers: 2
     0: 67 00      EvalInit c0
     2: 04 ff 01   LoadConstant r0, c1
     5: 05 ff      LoadUndefined r0
  .L0:
     7: 09 fe      LoadFalse r1
     9: 3f fe 08   JumpFalse r1, 8 (.L1)
    12: 03 ff 01   LoadImmediate r0, 1
    15: 39 f8      Jump -8 (.L0)
  .L1:
    17: 17 ff      Ret r0
  Constant Table:
    0: [GlobalNames]
    1: [String: while completion]
}

[BytecodeFunction: <eval>] {
  Parameters: 0, Registers: 2
     0: 67 00      EvalInit c0
     2: 04 ff 01   LoadConstant r0, c1
     5: 05 ff      LoadUndefined r0
  .L0:
     7: 03 ff 01   LoadImmediate r0, 1
    10: 09 fe      LoadFalse r1
    12: 3b fe fb   JumpTrue r1, -5 (.L0)
    15: 17 ff      Ret r0
  Constant Table:
    0: [GlobalNames]
    1: [String: do-while completion]
}

[BytecodeFunction: <eval>] {
  Parameters: 0, Registers: 2
     0: 67 00         EvalInit c0
     2: 5a 01         PushLexicalScope c1
     4: 60 07 00 00   StoreToScope <this>, 0, 0
     8: 04 ff 02      LoadConstant r0, c2
    11: 05 ff         LoadUndefined r0
    13: 4a fe         NewObject r1
    15: 5c fe 03      PushWithScope r1, c3
    18: 03 ff 01      LoadImmediate r0, 1
    21: 5d            PopScope 
    22: 17 ff         Ret r0
  Constant Table:
    0: [GlobalNames]
    1: [ScopeNames]
    2: [String: with completion]
    3: [ScopeNames]
}

[BytecodeFunction: <eval>] {
  Parameters: 0, Registers: 2
     0: 67 00      EvalInit c0
     2: 04 ff 01   LoadConstant r0, c1
     5: 05 ff      LoadUndefined r0
  .L0:
     7: 09 fe      LoadFalse r1
     9: 3f fe 08   JumpFalse r1, 8 (.L1)
    12: 03 ff 01   LoadImmediate r0, 1
    15: 39 f8      Jump -8 (.L0)
  .L1:
    17: 17 ff      Ret r0
  Constant Table:
    0: [GlobalNames]
    1: [String: for completion]
}

[BytecodeFunction: <eval>] {
  Parameters: 0, Registers: 3
     0: 67 00      EvalInit c0
     2: 04 ff 01   LoadConstant r0, c1
     5: 05 ff      LoadUndefined r0
     7: 4a fe      NewObject r1
     9: 45 fe 14   JumpNullish r1, 20 (.L1)
    12: 65 fe fe   NewForInIterator r1, r1
  .L0:
    15: 66 fd fe   ForInNext r2, r1
    18: 45 fd 0b   JumpNullish r2, 11 (.L1)
    21: 0f fd 02   StoreDynamic r2, c2
    24: 03 ff 01   LoadImmediate r0, 1
    27: 39 f4      Jump -12 (.L0)
  .L1:
    29: 17 ff      Ret r0
  Constant Table:
    0: [GlobalNames]
    1: [String: for-in completion]
    2: [String: x]
}

[BytecodeFunction: <eval>] {
  Parameters: 0, Registers: 6
     0: 67 00            EvalInit c0
     2: 04 ff 01         LoadConstant r0, c1
     5: 05 ff            LoadUndefined r0
     7: 4b fc            NewArray r3
     9: 68 fe fd fc      GetIterator r1, r2, r3
  .L0:
    13: 69 fc fb fe fd   IteratorNext r3, r4, r1, r2
    18: 3b fb 1a         JumpTrue r4, 26 (.L2)
    21: 0f fc 02         StoreDynamic r3, c2
    24: 02 fa 03         Mov r5, <scope>
    27: 03 ff 01         LoadImmediate r0, 1
    30: 39 0c            Jump 12 (.L1)
    32: 03 fc 00         LoadImmediate r3, 0
    35: 02 03 fa         Mov <scope>, r5
    38: 6a fe            IteratorClose r1
    40: 61 fb            Throw r4
  .L1:
    42: 39 e3            Jump -29 (.L0)
  .L2:
    44: 17 ff            Ret r0
  Constant Table:
    0: [GlobalNames]
    1: [String: for-of completion]
    2: [String: x]
  Exception Handlers:
    21-30 -> 32 (r4)
    38-40 -> 40
}

[BytecodeFunction: <eval>] {
  Parameters: 0, Registers: 2
     0: 67 00      EvalInit c0
     2: 04 ff 01   LoadConstant r0, c1
     5: 05 ff      LoadUndefined r0
     7: 02 fe 03   Mov r1, <scope>
    10: 03 ff 01   LoadImmediate r0, 1
    13: 39 08      Jump 8 (.L0)
    15: 02 03 fe   Mov <scope>, r1
    18: 03 ff 02   LoadImmediate r0, 2
  .L0:
    21: 17 ff      Ret r0
  Constant Table:
    0: [GlobalNames]
    1: [String: try-catch completion]
  Exception Handlers:
    10-13 -> 15
}

[BytecodeFunction: <eval>] {
  Parameters: 0, Registers: 5
     0: 67 00         EvalInit c0
     2: 04 ff 01      LoadConstant r0, c1
     5: 02 fc 03      Mov r3, <scope>
     8: 05 ff         LoadUndefined r0
    10: 03 ff 01      LoadImmediate r0, 1
    13: 03 fe 01      LoadImmediate r1, 1
    16: 39 05         Jump 5 (.L0)
    18: 03 fe 00      LoadImmediate r1, 0
  .L0:
    21: 02 03 fc      Mov <scope>, r3
    24: 02 fc ff      Mov r3, r0
    27: 05 ff         LoadUndefined r0
    29: 03 ff 02      LoadImmediate r0, 2
    32: 03 fb 00      LoadImmediate r4, 0
    35: 26 fb fe fb   StrictEqual r4, r1, r4
    39: 3f fb 05      JumpFalse r4, 5 (.L1)
    42: 61 fd         Throw r2
  .L1:
    44: 02 ff fc      Mov r0, r3
    47: 39 02         Jump 2 (.L2)
  .L2:
    49: 17 ff         Ret r0
  Constant Table:
    0: [GlobalNames]
    1: [String: try-finally completion]
  Exception Handlers:
    10-13 -> 18 (r2)
}

[BytecodeFunction: <eval>] {
  Parameters: 0, Registers: 5
     0: 67 00         EvalInit c0
     2: 04 ff 01      LoadConstant r0, c1
     5: 02 fc 03      Mov r3, <scope>
     8: 05 ff         LoadUndefined r0
    10: 03 ff 01      LoadImmediate r0, 1
    13: 03 fe 01      LoadImmediate r1, 1
    16: 39 10         Jump 16 (.L0)
    18: 02 03 fc      Mov <scope>, r3
    21: 03 ff 02      LoadImmediate r0, 2
    24: 03 fe 01      LoadImmediate r1, 1
    27: 39 05         Jump 5 (.L0)
    29: 03 fe 00      LoadImmediate r1, 0
  .L0:
    32: 02 03 fc      Mov <scope>, r3
    35: 02 fc ff      Mov r3, r0
    38: 05 ff         LoadUndefined r0
    40: 03 ff 03      LoadImmediate r0, 3
    43: 03 fb 00      LoadImmediate r4, 0
    46: 26 fb fe fb   StrictEqual r4, r1, r4
    50: 3f fb 05      JumpFalse r4, 5 (.L1)
    53: 61 fd         Throw r2
  .L1:
    55: 02 ff fc      Mov r0, r3
    58: 39 02         Jump 2 (.L2)
  .L2:
    60: 17 ff         Ret r0
  Constant Table:
    0: [GlobalNames]
    1: [String: try-catch-finally completion]
  Exception Handlers:
    10-13 -> 18
    18-24 -> 29 (r2)
}

